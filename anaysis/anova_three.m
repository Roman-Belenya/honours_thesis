
function anova_three(m)

m = m(:, 2:end);

visFeedback = [1 1 1 1 2 2 2 2];
cues = [1 1 2 2 1 1 2 2];
direction = [1 2 1 2 1 2 1 2];


occ = logical(repmat([1 1 1 1 0 0 0 0], [size(m, 1), 1]));
vis = logical(abs(occ - 1));
cue = logical(repmat([1 1 0 0 1 1 0 0], [size(m, 1), 1]));
ncue = logical(abs(cue - 1));
lr = logical(repmat([1 0 1 0 1 0 1 0], [size(m, 1) 1]));
rl = logical(abs(lr - 1));


% Variable A, Visual Feedback
[SSa, DFa, ~, SSaxs, DFaxs, ~, Fa, Pa] = main_effect(m, visFeedback, cues, direction);

% Variable B, Cues presence
[SSb, DFb, ~, SSbxs, DFbxs, ~, Fb, Pb] = main_effect(m, cues, visFeedback, direction);

% Variable C, Direction
[SSc, DFc, ~, SScxs, DFcxs, ~, Fc, Pc] = main_effect(m, direction, visFeedback, cues);

% A & B interaction, Visual feedback x Cues presence
[SSaxb, DFaxb, ~, SSaxbxs, DFaxbxs, ~, Faxb, Paxb] = ...
    interaction(m, visFeedback, cues, direction);

% A & C interaction, Visual feedback x Direction
[SSaxc, DFaxc, ~, SSaxcxs, DFaxcxs, ~, Faxc, Paxc] = ...
    interaction(m, visFeedback, direction, cues);

% B & C interaction, Cues presence x Direction
[SSbxc, DFbxc, ~, SSbxcxs, DFbxcxs, ~, Fbxc, Pbxc] = ...
    interaction(m, cues, direction, visFeedback);

% A & B & C interaction
[SSaxbxc, DFaxbxc, ~, SSaxbxcxs, DFaxbxcxs, ~, Faxbxc, Paxbxc] =...
    three_way_interaction(m, visFeedback, cues, direction);


% SSt = sum(m(:).^2) - sum(m(:))^2 / (2 * 2 * 2 * size(m,1));

sprintf(strcat('\n\nWithin-subjects Effects', ...
    '\n=========================================================================\n', ...
    'Source                                  SS           df      F        p', ...
    '\n=========================================================================\n', ...
    'VisFeedback                           %5.4f %10i    %5.4f  %.3f\n', ...
    'Error(VisFeedback)                    %5.4f %10i', ...
    '\n-------------------------------------\n', ...
    'Cues                                  %5.4f %10i    %5.4f   %.3f\n', ...
    'Error(Cues)                           %5.4f %10i', ...
    '\n-------------------------------------\n', ...
    'Direction                             %5.4f %10i    %5.4f  %.3f\n', ...
    'Error(Direction)                      %5.4f %10i', ...
    '\n-------------------------------------\n', ...
    'VisFeedback * Cues                    %5.4f %10i    %5.4f   %.3f\n', ...
    'Error(VisFeedback * Cues)             %5.4f %10i', ...
    '\n-------------------------------------\n', ...
    'VisFeedback * Direction               %5.4f %10i    %5.4f   %.3f\n', ...
    'Error(VisFeedback * Direction)        %5.4f %10i', ...
    '\n-------------------------------------\n', ...
    'Cues * Direction                      %5.4f %10i    %5.4f   %.3f\n', ...
    'Error(Cues * Direction)               %5.4f %10i', ...
    '\n-------------------------------------\n', ...
    'VisFeedback * Cues * Direction        %5.4f %10i    %5.4f   %.3f\n', ...
    'Error(VisFeedback * Cues * Direction) %5.4f %10i', ...
    '\n-------------------------------------\n'), ...
    SSa, DFa, Fa, Pa,...
    SSaxs, DFaxs, ...
    SSb, DFb, Fb, Pb, ...
    SSbxs, DFbxs, ...
    SSc, DFc, Fc, Pc, ...
    SScxs, DFcxs, ...
    SSaxb, DFaxb, Faxb, Paxb, ...
    SSaxbxs, DFaxbxs, ...
    SSaxc, DFaxc, Faxc, Paxc, ...
    SSaxcxs, DFaxcxs, ...
    SSbxc, DFbxc, Fbxc, Pbxc, ...
    SSbxcxs, DFbxcxs, ...
    SSaxbxc, DFaxbxc, Faxbxc, Paxbxc, ...
    SSaxbxcxs, DFaxbxcxs)

end

function [SS, DF, MS, SSe, DFe, MSe, F, P] = main_effect(m, levels1, levels2, levels3)

SS = (sum(sum(m(:, levels1 == 1)))^2 + sum(sum(m(:, levels1 == 2)))^2) / (length(unique(levels2)) * length(unique(levels3)) * size(m,1)) - ...
    sum(m(:))^2 / (length(unique(levels1)) * length(unique(levels2)) * length(unique(levels3)) * size(m,1));

DF = length(unique(levels1)) - 1;
MS = SS / DF;

SSe = sum(sum(m(:,levels1 == 1), 2).^2 + sum(m(:,levels1 == 2), 2).^2) / (length(unique(levels2)) * length(unique(levels3))) - ...
    (sum(sum(m(:,levels1 == 1)))^2 + sum(sum(m(:,levels1 == 2)))^2) / (length(unique(levels2)) * length(unique(levels3)) * size(m,1)) - ...
    sum(sum(m, 2).^2) / (length(unique(levels1)) * length(unique(levels2)) * length(unique(levels3))) + ...
    sum(m(:))^2 / (length(unique(levels1)) * length(unique(levels2)) * length(unique(levels3)) * size(m,1));
DFe = (length(unique(levels1)) - 1)*(size(m,1) - 1);
MSe = SSe / DFe;

F = MS / MSe;

P = 1 - fcdf(F, DF, DFe);

end

% function [SS, DF, MS, SSe, DFe, MSe, F, P] = main_effect(m, l1, l2)
% 
% SS = (sum(m(l1))^2 + sum(m(l2))^2) / (2 * 2 * size(m,1)) - ...
%     (sum(m(:))^2) / (2 * 2 * 2 * size(m,1));
% DF = length(unique(levels1)) - 1;
% MS = SS / DF;
% 
% SSe = sum(sum(m(:,levels1 == 1), 2).^2 + sum(m(:,levels1 == 2), 2).^2) / (length(unique(levels2)) * length(unique(levels3))) - ...
%     (sum(sum(m(:,levels1 == 1)))^2 + sum(sum(m(:,levels1 == 2)))^2) / (length(unique(levels2)) * length(unique(levels3)) * size(m,1)) - ...
%     sum(sum(m, 2).^2) / (length(unique(levels1)) * length(unique(levels2)) * length(unique(levels3))) + ...
%     sum(m(:))^2 / (length(unique(levels1)) * length(unique(levels2)) * length(unique(levels3)) * size(m,1));
% DFe = (length(unique(levels1)) - 1)*(size(m,1) - 1);
% MSe = SSe / DFe;
% 
% F = MS / MSe;
% 
% P = 1 - fcdf(F, DF, DFe);
% end

function [SS, DF, MS, SSe, DFe, MSe, F, P] = interaction(m, levels1, levels2, levels3)

SS = (sum(sum(m(:,levels1 == 1 & levels2 == 1)))^2 + sum(sum(m(:,levels1 == 1 & levels2 == 2)))^2 + sum(sum(m(:,levels1 == 2 & levels2 == 1)))^2 + sum(sum(m(:,levels1 == 2 & levels2 == 2)))^2) / (length(unique(levels3)) * size(m,1)) - ...
    (sum(sum(m(:,levels1 == 1)))^2 + sum(sum(m(:,levels1 == 2)))^2) / (length(unique(levels2)) * length(unique(levels3)) * size(m,1)) - ...
    (sum(sum(m(:,levels2 == 1)))^2 + sum(sum(m(:,levels2 == 2)))^2) / (length(unique(levels1)) * length(unique(levels3)) * size(m,1)) + ...
    sum(m(:))^2 / (length(unique(levels1)) * length(unique(levels2)) * length(unique(levels3)) * size(m,1));
DF = (length(unique(levels1)) - 1)*(length(unique(levels2)) - 1);
MS = SS / DF;

SSe = sum(sum(m(:,levels1 == 1 & levels2 == 1), 2).^2 + sum(m(:,levels1 == 1 & levels2 == 2), 2).^2 + sum(m(:,levels1 == 2 & levels2 == 1), 2).^2 + sum(m(:,levels1 == 2 & levels2 == 2), 2).^2) / length(unique(levels3)) - ...
    (sum(sum(m(:,levels1 == 1 & levels2 == 1)))^2 + sum(sum(m(:,levels1 == 1 & levels2 == 2)))^2 + sum(sum(m(:,levels1 == 2 & levels2 == 1)))^2 + sum(sum(m(:,levels1 == 2 & levels2 == 2)))^2) / (length(unique(levels3)) * size(m,1)) - ...
    sum(sum(m(:,levels1 == 1), 2).^2 + sum(m(:,levels1 == 2), 2).^2) / (length(unique(levels2)) * length(unique(levels3))) - ...
    sum(sum(m(:,levels2 == 1), 2).^2 + sum(m(:,levels2 == 2), 2).^2) / (length(unique(levels1)) * length(unique(levels3))) + ...
    sum(sum(m, 2).^2) / (length(unique(levels1)) * length(unique(levels2)) * length(unique(levels3))) + ...
    (sum(sum(m(:,levels1 == 1)))^2 + sum(sum(m(:,levels1 == 2)))^2) / (length(unique(levels2)) * length(unique(levels3)) * size(m,1)) + ...
    (sum(sum(m(:,levels2 == 1)))^2 + sum(sum(m(:,levels2 == 2)))^2) / (length(unique(levels1)) * length(unique(levels3)) * size(m,1)) - ...
    sum(m(:))^2 / (length(unique(levels1)) * length(unique(levels2)) * length(unique(levels3)) * size(m,1));
DFe = (length(unique(levels1)) - 1) * (length(unique(levels2)) - 1) * (size(m,1) - 1);
MSe = SSe / DFe;

F = MS / MSe;

P = 1 - fcdf(F, DF, DFe);

end

function [SS, DF, MS, SSe, DFe, MSe, F, P] = three_way_interaction(m, levels1, levels2, levels3)

SS = sum(sum(m).^2) / size(m,1) - ...
    (sum(sum(m(:, levels2 == 1 & levels3 == 1)))^2 + sum(sum(m(:, levels2 == 1 & levels3 == 2)))^2  + sum(sum(m(:, levels2 == 2 & levels3 == 1)))^2 + sum(sum(m(:, levels2 == 2 & levels3 == 2)))^2)/ (length(unique(levels1)) * size(m,1)) - ...
    (sum(sum(m(:, levels1 == 1 & levels3 == 1)))^2 + sum(sum(m(:, levels1 == 1 & levels3 == 2)))^2  + sum(sum(m(:, levels1 == 2 & levels3 == 1)))^2 + sum(sum(m(:, levels1 == 2 & levels3 == 2)))^2)/ (length(unique(levels2)) * size(m,1)) - ...
    (sum(sum(m(:,levels1 == 1 & levels2 == 1)))^2 + sum(sum(m(:,levels1 == 1 & levels2 == 2)))^2 + sum(sum(m(:,levels1 == 2 & levels2 == 1)))^2 + sum(sum(m(:,levels1 == 2 & levels2 == 2)))^2) / (length(unique(levels3)) * size(m,1)) + ...
    (sum(sum(m(:,levels3 == 1)))^2 + sum(sum(m(:,levels3 == 2)))^2) / (length(unique(levels1)) * length(unique(levels2)) * size(m,1)) + ...
    (sum(sum(m(:,levels2 == 1)))^2 + sum(sum(m(:,levels2 == 2)))^2) / (length(unique(levels1)) * length(unique(levels3)) * size(m,1)) + ...
    (sum(sum(m(:,levels1 == 1)))^2 + sum(sum(m(:,levels1 == 2)))^2) / (length(unique(levels2)) * length(unique(levels3)) * size(m,1)) - ...
    sum(m(:))^2 / (2 * 2 * 2 * size(m,1));
DF = (length(unique(levels1)) - 1) * (length(unique(levels2)) - 1) * (length(unique(levels3)) - 1);
MS = SS / DF;

SSe = sum(sum(m(:,levels3 == 1), 2).^2 + sum(m(:,levels3 == 2), 2).^2) / (length(unique(levels1)) * length(unique(levels2))) + ...
    sum(sum(m(:,levels2 == 1), 2).^2 + sum(m(:,levels2 == 2), 2).^2) / (length(unique(levels1)) * length(unique(levels3))) + ...
    sum(sum(m(:,levels1 == 1), 2).^2 + sum(m(:,levels1 == 2), 2).^2) / (length(unique(levels2)) * length(unique(levels3))) + ...
    (sum(sum(m(:, levels2 == 1 & levels3 == 1)))^2 + sum(sum(m(:, levels2 == 1 & levels3 == 2)))^2 + sum(sum(m(:, levels2 == 2 & levels3 == 1)))^2 + sum(sum(m(:, levels2 == 2 & levels3 == 2)))^2)/ (length(unique(levels1)) * size(m,1)) + ...
    (sum(sum(m(:, levels1 == 1 & levels3 == 1)))^2 + sum(sum(m(:, levels1 == 1 & levels3 == 2)))^2 + sum(sum(m(:, levels1 == 2 & levels3 == 1)))^2 + sum(sum(m(:, levels1 == 2 & levels3 == 2)))^2)/ (length(unique(levels2)) * size(m,1)) + ...
    (sum(sum(m(:, levels1 == 1 & levels2 == 1)))^2 + sum(sum(m(:, levels1 == 1 & levels2 == 2)))^2 + sum(sum(m(:, levels1 == 2 & levels2 == 1)))^2 + sum(sum(m(:, levels1 == 2 & levels2 == 2)))^2) / (length(unique(levels3)) * size(m,1)) + ...
    sum(m(:).^2) + ...
    sum(m(:))^2 / (length(unique(levels1)) * length(unique(levels2)) * length(unique(levels3)) * size(m,1)) - ...
    (sum(sum(m(:,levels1 == 1)))^2 + sum(sum(m(:,levels1 == 2)))^2) / (length(unique(levels2)) * length(unique(levels3)) * size(m,1)) - ...
    (sum(sum(m(:,levels2 == 1)))^2 + sum(sum(m(:,levels2 == 2)))^2) / (length(unique(levels1)) * length(unique(levels3)) * size(m,1)) - ...
    (sum(sum(m(:,levels3 == 1)))^2 + sum(sum(m(:,levels3 == 2)))^2) / (length(unique(levels1)) * length(unique(levels2)) * size(m,1)) - ...
    sum(sum(m).^2) / size(m,1) - ...
    sum(sum(m, 2).^2) / (length(unique(levels1)) * length(unique(levels2)) * length(unique(levels3))) - ...
    sum(sum(m(:,levels1 == 1 & levels2 == 1), 2).^2 + sum(m(:,levels1 == 1 & levels2 == 2), 2).^2 + sum(m(:,levels1 == 2 & levels2 == 1), 2).^2 + sum(m(:,levels1 == 2 & levels2 == 2), 2).^2) / length(unique(levels3)) - ...
    sum(sum(m(:,levels1 == 1 & levels3 == 1), 2).^2 + sum(m(:,levels1 == 1 & levels3 == 2), 2).^2 + sum(m(:,levels1 == 2 & levels3 == 1), 2).^2 + sum(m(:,levels1 == 2 & levels3 == 2), 2).^2) / length(unique(levels2)) - ...
    sum(sum(m(:,levels2 == 1 & levels3 == 1), 2).^2 + sum(m(:,levels2 == 1 & levels3 == 2), 2).^2 + sum(m(:,levels2 == 2 & levels3 == 1), 2).^2 + sum(m(:,levels2 == 2 & levels3 == 2), 2).^2) / length(unique(levels1));

DFe = (length(unique(levels1)) - 1) * (length(unique(levels2)) - 1) * (length(unique(levels3)) - 1) * (size(m,1) - 1);
MSe = SSe / DFe;

F = MS / MSe;

P = 1 - fcdf(F, DF, DFe);

end